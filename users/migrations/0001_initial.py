# Generated by Django 4.1.8 on 2025-08-08 22:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=15, unique=True, validators=[django.core.validators.RegexValidator(message='Telefon numarası geçerli formatta olmalı. Örnek: 05551234567 ya da +905551234567', regex='^(\\+90|0)?5[0-9]{9}$')], verbose_name='Telefon Numarası')),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='Telefon Doğrulandı')),
                ('has_children', models.BooleanField(default=False, verbose_name='Çocuğu Var mı?')),
                ('children_count', models.PositiveIntegerField(default=0, verbose_name='Çocuk Sayısı')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Kullanıcı',
                'verbose_name_plural': 'Kullanıcılar',
            },
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Çocuk Adı')),
                ('grade', models.CharField(choices=[('3_yas', '3 Yaş'), ('4_yas', '4 Yaş'), ('5_yas', '5 Yaş'), ('1_sinif', '1. Sınıf'), ('2_sinif', '2. Sınıf'), ('3_sinif', '3. Sınıf'), ('4_sinif', '4. Sınıf'), ('5_sinif', '5. Sınıf'), ('6_sinif', '6. Sınıf'), ('7_sinif', '7. Sınıf'), ('8_sinif', '8. Sınıf'), ('9_sinif', '9. Sınıf'), ('10_sinif', '10. Sınıf'), ('11_sinif', '11. Sınıf'), ('12_sinif', '12. Sınıf')], max_length=20, verbose_name='Sınıf')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Çocuk',
                'verbose_name_plural': 'Çocuklar',
                'ordering': ['created_at'],
            },
        ),
    ]
